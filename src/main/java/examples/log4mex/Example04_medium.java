package examples.log4mex;

import org.aksw.mex.log4mex.MEXSerializer;
import org.aksw.mex.log4mex.MyMEXVO;
import org.aksw.mex.log4mex.algo.AlgorithmVO;
import org.aksw.mex.util.MEXEnum;
import org.aksw.mex.util.MEXEnum.*;

import java.util.Date;

/**
 * Created by esteves on 27.06.15.
 */
public class Example04_medium {

    public static void main(String[] args) {

        System.out.println("starting example 04...");

        //the MEX wrapper!
        MyMEXVO mex = new MyMEXVO();

        try{

        //basic authoring provenance
        {
            //change later here the sets for adds
            mex.setAuthorName("D Esteves");
            mex.setAuthorEmail("esteves@informatik.uni-leipzig.de");
            mex.setContext(MEXEnum.EnumContext.RecomenderSystems);
            mex.setOrganization("Leipzig University");

            mex.setExperimentId("E001");
            mex.setExperimentTitle("my first experiment");
            mex.setExperimentDate(new Date());
            mex.setExperimentDescription("my first MEX experiment");
        }

        String eid = "E001S001";
        //ml-experiment-configuration
        {
            mex.addConfiguration(eid);

            mex.Configuration(eid).setDescription("analyzing 10-fold cross validation for SVM");
            mex.Configuration(eid).addModel("svm20150322", "model generated by LibSVM", new Date());

            mex.Configuration(eid).addSamplingMethod(EnumSamplingMethod.CrossValidation, 10);
            mex.Configuration(eid).SamplingMethod().setTrainSize(0.8);
            mex.Configuration(eid).SamplingMethod().setTestSize(0.2);
            mex.Configuration(eid).SamplingMethod().setSequential(true);

            mex.Configuration(eid).addHardwareConfiguration("ubuntu", EnumProcessor.INTEL_COREI7, EnumRandomAccessMemory.SIZE_16GB, "SSD", EnumCache.CACHE_3MB);


            mex.Configuration(eid).DataSet().setName("bovespa");
            mex.Configuration(eid).DataSet().setDescription("brazilian stock market 2013");
            mex.Configuration(eid).DataSet().setURI("http://www.bmfbovespa.com.br/shared/iframe.aspx?idioma=pt-br&url=http://www.bmfbovespa.com.br/pt-br/cotacoes-historicas/FormSeriesHistoricas.asp");

            mex.Configuration(eid).addFeature("min");
            mex.Configuration(eid).addFeature("max");
            mex.Configuration(eid).addFeature("ope");
            mex.Configuration(eid).addFeature("clo");

        }

        //adding algorithms and parameters
        AlgorithmVO alg1;
        {

            mex.Configuration(eid).addImplementation(EnumImplementation.Weka, "3.6.6");

            alg1 = mex.Configuration(eid).addAlgorithm(EnumAlgorithm.SupportVectorMachines);
            mex.Configuration(eid).addAlgorithm(EnumAlgorithm.NaiveBayes);

            String[] param = {"C", "10^3", "alpha", "0.2"};
            alg1.addParameter(param);
        }

        String ex1 = "EX001";
        String ex2 = "EX002";
        //associate your run x each algorithm
        {
            mex.Configuration(eid).addExecutionOverall(eid, ex1, EnumPhases.TRAIN.name());
            mex.Configuration(eid).ExecutionOverall(ex1).setStartDate(new Date());
            mex.Configuration(eid).ExecutionOverall(ex1).setAlgorithm(mex.Configuration(eid).Algorithm(EnumAlgorithm.SupportVectorMachines));
            mex.Configuration(eid).ExecutionOverall(ex1).setStartsAtPosition("1233");
            mex.Configuration(eid).ExecutionOverall(ex1).setEndsAtPosition("1376");


                //your models call here !
            mex.Configuration(eid).ExecutionOverall(ex1).setEndDate(new Date());

            mex.Configuration(eid).addExecutionOverall(eid, ex2, EnumPhases.TEST.name());
            mex.Configuration(eid).ExecutionOverall(ex2).setStartDate(new Date());
            mex.Configuration(eid).ExecutionOverall(ex2).setAlgorithm(mex.Configuration(eid).Algorithm(EnumAlgorithm.SupportVectorMachines));
            mex.Configuration(eid).ExecutionOverall(ex2).setStartsAtPosition("1377");
            mex.Configuration(eid).ExecutionOverall(ex2).setEndsAtPosition("1420");

                //your models call here !
            mex.Configuration(eid).ExecutionOverall(ex2).setEndDate(new Date());

        }

        //saving performances for each run
        {

            mex.Configuration(eid).ExecutionOverall(ex1).addPerformance(EnumMeasures.ACCURACY.toString(), .96);
            mex.Configuration(eid).ExecutionOverall(ex1).addPerformance(EnumMeasures.TRUEPOSITIVERATE.toString(), .70);
            mex.Configuration(eid).ExecutionOverall(ex2).addPerformance(EnumMeasures.ERROR.toString(), .04);
            mex.Configuration(eid).ExecutionOverall(ex2).addPerformance(EnumMeasures.ACCURACY.toString(), .83);
            mex.Configuration(eid).ExecutionOverall(ex2).addPerformance(EnumMeasures.TRUEPOSITIVERATE.toString(), .61);
        }

        //exporting your ML experiment
        MEXSerializer.getInstance().parse(mex);

        MEXSerializer.getInstance().saveToDisk("/home/esteves/iswcdemo/ex004.ttl", "http://mex.aksw.org/examples/001/", mex);

            System.out.println("The MEX file [ex004.ttl] has been successfully created: share it ;-)");

        System.exit(0);

        }catch (Exception e){
            System.out.println(e.toString());
        }


    }

}
